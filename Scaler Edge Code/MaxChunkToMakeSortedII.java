public class MaxChunkToMakeSortedII {
	public static int solve(int[] arr) {
		int cnt = 1, i, n = arr.length;
		int leftMax[] = new int[n];
		int rightMin[] = new int[n];
		leftMax[0] = arr[0];
		for (i = 1; i < n; i++)
			leftMax[i] = Math.max(arr[i], leftMax[i - 1]);
		rightMin[n - 1] = arr[n - 1];
		for (i = n - 2; i >= 0; i--)
			rightMin[i] = Math.min(arr[i], rightMin[i + 1]);

		for (i = 0; i < n - 1; i++) {
			if (leftMax[i] <= rightMin[i + 1])
				cnt += 1;
		}
	   System.out.println(cnt);
		return cnt;
	}

	public static void main(String[] args) {
		solve(new int[] { 7, 1, 5, 8, 6, 9, 14, 11, 16, 4, 18, 15, 10, 12, 13, 17, 22, 19, 20, 2, 3, 21, 23, 24, 25, 26,
				27, 30, 28, 29, 31, 32, 33, 34, 0, 36, 35, 46, 37, 43, 38, 39, 50, 40, 44, 41, 42, 45, 47, 48, 57, 49,
				51, 52, 53, 54, 55, 61, 58, 56, 59, 60, 62, 63, 64, 65, 67, 66, 68, 77, 69, 70, 71, 72, 73, 74, 75, 76,
				85, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 95, 96, 97, 106, 98, 99, 101,
				107, 102, 110, 103, 104, 105, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
				124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 151,
				144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 164, 155, 156, 157, 158, 159, 160, 162, 163, 161, 165,
				166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 185,
				186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 202, 200, 201, 203, 204, 205, 206, 207,
				213, 208, 214, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220 });
	}
}
